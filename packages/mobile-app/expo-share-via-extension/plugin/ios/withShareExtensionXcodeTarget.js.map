{"version":3,"file":"withShareExtensionXcodeTarget.js","sourceRoot":"","sources":["../../src/ios/withShareExtensionXcodeTarget.ts"],"names":[],"mappings":"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","sourcesContent":["import { ConfigPlugin, withXcodeProject } from '@expo/config-plugins';\n\nimport { getShareExtensionBundledIdentifier, shareExtensionName } from './constants';\nimport {\n  getShareExtensionEntitlementsFilePath,\n  getShareExtensionInfoFilePath,\n  getShareExtensionStoryboardFilePath,\n  getShareExtensionViewControllerPath,\n  writeShareExtensionFiles,\n} from './writeShareExtensionFiles';\n\nexport const withShareExtensionXcodeTarget: ConfigPlugin = (config) => {\n  return withXcodeProject(config, async (config) => {\n    console.log(\"config \", config );\n    const extensionName = shareExtensionName;\n    const platformProjectRoot = config.modRequest.platformProjectRoot;\n    const scheme = config.scheme!;\n    const appIdentifier = config.ios?.bundleIdentifier!;\n    const shareExtensionIdentifier = getShareExtensionBundledIdentifier(appIdentifier);\n    const currentProjectVersion = config.ios!.buildNumber || '1';\n    const marketingVersion = config.version!;\n\n    const infoPlistFilePath = getShareExtensionInfoFilePath(platformProjectRoot);\n    const entitlementsFilePath = getShareExtensionEntitlementsFilePath(platformProjectRoot);\n    const viewControllerFilePath = getShareExtensionViewControllerPath(platformProjectRoot);\n    const storyboardFilePath = getShareExtensionStoryboardFilePath(platformProjectRoot);\n\n    await writeShareExtensionFiles(platformProjectRoot, scheme, appIdentifier);\n\n    const pbxProject = config.modResults;\n\n    const target = pbxProject.addTarget(extensionName, 'app_extension', extensionName);\n\n    // Add a new PBXSourcesBuildPhase for our ShareViewController\n    // (we can't add it to the existing one because an extension is kind of an extra app)\n    pbxProject.addBuildPhase([], 'PBXSourcesBuildPhase', 'Sources', target.uuid);\n\n    // Add a new PBXResourcesBuildPhase for the Resources used by the Share Extension\n    // (MainInterface.storyboard)\n    pbxProject.addBuildPhase([], 'PBXResourcesBuildPhase', 'Resources', target.uuid);\n\n    // Create a separate PBXGroup for the shareExtension's files\n    console.log(\"Creating pbx group , \", extensionName);\n    const pbxGroupKey = pbxProject.pbxCreateGroup(extensionName, extensionName);\n\n    // Add files which are not part of any build phase (plist)\n    pbxProject.addFile(infoPlistFilePath, pbxGroupKey);\n\n    // Add source files to our PbxGroup and our newly created PBXSourcesBuildPhase\n    pbxProject.addSourceFile(viewControllerFilePath, { target: target.uuid }, pbxGroupKey);\n\n    //  Add the resource file and include it into the target PbxResourcesBuildPhase and PbxGroup\n    pbxProject.pbxCreateGroup(\"Resources\", extensionName);\n    pbxProject.pbxCreateGroup(extensionName, \"Resources\");\n    pbxProject.addResourceFile(storyboardFilePath, { target: target.uuid }, pbxGroupKey);\n\n    var configurations = pbxProject.pbxXCBuildConfigurationSection();\n    for (var key in configurations) {\n      if (typeof configurations[key].buildSettings !== 'undefined') {\n        var buildSettingsObj = configurations[key].buildSettings;\n        if (\n          typeof buildSettingsObj['PRODUCT_NAME'] !== 'undefined' &&\n          buildSettingsObj['PRODUCT_NAME'] === `\"${extensionName}\"`\n        ) {\n          buildSettingsObj['CLANG_ENABLE_MODULES'] = 'YES';\n          buildSettingsObj['INFOPLIST_FILE'] = `\"${infoPlistFilePath}\"`;\n          buildSettingsObj['CODE_SIGN_ENTITLEMENTS'] = `\"${entitlementsFilePath}\"`;\n          buildSettingsObj['CODE_SIGN_STYLE'] = 'Automatic';\n          buildSettingsObj['CURRENT_PROJECT_VERSION'] = `\"${currentProjectVersion}\"`;\n          buildSettingsObj['GENERATE_INFOPLIST_FILE'] = 'YES';\n          buildSettingsObj['MARKETING_VERSION'] = `\"${marketingVersion}\"`;\n          buildSettingsObj['PRODUCT_BUNDLE_IDENTIFIER'] = `\"${shareExtensionIdentifier}\"`;\n          buildSettingsObj['SWIFT_EMIT_LOC_STRINGS'] = 'YES';\n          buildSettingsObj['SWIFT_VERSION'] = '5.0';\n          buildSettingsObj['TARGETED_DEVICE_FAMILY'] = `\"1,2\"`;\n        }\n      }\n    }\n\n    return config;\n  });\n};\n"]}