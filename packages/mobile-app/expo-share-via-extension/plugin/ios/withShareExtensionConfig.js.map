{"version":3,"file":"withShareExtensionConfig.js","sourceRoot":"","sources":["../../src/ios/withShareExtensionConfig.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AACA,yCAAqF;AACrF,uEAA2E;AAEpE,IAAM,wBAAwB,GAAiB,UAAC,MAAM;;IAC3D,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;IAC7C,IAAM,OAAO,GAAG,8BAAkB,CAAC;IACnC,IAAM,aAAa,GAAG,MAAM,CAAC,GAAI,CAAC,gBAAiB,CAAC;IACpD,IAAM,wBAAwB,GAAG,IAAA,8CAAkC,EAAC,aAAa,CAAC,CAAC;IAEnF,IAAI,cAAc,GAAkB,IAAI,CAAC;IACzC,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAM,CAAC,KAAK,0CAAE,GAAG,0CAAE,KAAK,0CAAE,YAAY,0CAAE,GAAG,0CAAE,aAAa,0CAAE,OAAO,CAAC,UAAC,GAAQ,EAAE,KAAa;QAC1F,GAAG,CAAC,UAAU,KAAK,OAAO,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,CAAC;IACzD,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;QACjB,MAAM,CAAC,KAAK,GAAG,EAAE,CAAC;KACnB;IAED,IAAI,CAAC,cAAc,EAAE;QACnB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE;YACrB,MAAM,CAAC,KAAK,CAAC,GAAG,GAAG,EAAE,CAAC;SACvB;QACD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE;YAC3B,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,GAAG,EAAE,CAAC;SAC7B;QACD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,YAAY,EAAE;YACxC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,YAAY,GAAG,EAAE,CAAC;SAC1C;QACD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,EAAE;YAC5C,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,GAAG,EAAE,CAAC;SAC9C;QACD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,EAAE;YAC1D,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,GAAG,EAAE,CAAC;SAC5D;QACD,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC;YACzD,UAAU,EAAE,OAAO;YACnB,gBAAgB,EAAE,wBAAwB;SAC3C,CAAC,CAAC;QACH,cAAc,GAAG,CAAC,CAAC;KACpB;IAED,IAAM,SAAS,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;IACxF,SAAS,CAAC,YAAY,yBACjB,SAAS,CAAC,YAAY,GACtB,IAAA,wDAA6B,EAAC,aAAa,CAAC,CAChD,CAAC;IAEF,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;AA7CW,QAAA,wBAAwB,4BA6CnC","sourcesContent":["import { ConfigPlugin } from '@expo/config-plugins';\nimport { getShareExtensionBundledIdentifier, shareExtensionName } from './constants';\nimport { getShareExtensionEntitlements } from './writeShareExtensionFiles';\n\nexport const withShareExtensionConfig: ConfigPlugin = (config) => {\n  console.log(\"Adding share extensino config\");\n  const extName = shareExtensionName;\n  const appIdentifier = config.ios!.bundleIdentifier!;\n  const shareExtensionIdentifier = getShareExtensionBundledIdentifier(appIdentifier);\n\n  let extConfigIndex: number | null = null;\n  config.extra?.eas?.build?.experimental?.ios?.appExtensions?.forEach((ext: any, index: number) => {\n    ext.targetName === extName && (extConfigIndex = index);\n  });\n\n  if (!config.extra) {\n    config.extra = {};\n  }\n\n  if (!extConfigIndex) {\n    if (!config.extra.eas) {\n      config.extra.eas = {};\n    }\n    if (!config.extra.eas.build) {\n      config.extra.eas.build = {};\n    }\n    if (!config.extra.eas.build.experimental) {\n      config.extra.eas.build.experimental = {};\n    }\n    if (!config.extra.eas.build.experimental.ios) {\n      config.extra.eas.build.experimental.ios = {};\n    }\n    if (!config.extra.eas.build.experimental.ios.appExtensions) {\n      config.extra.eas.build.experimental.ios.appExtensions = [];\n    }\n    config.extra.eas.build.experimental.ios.appExtensions.push({\n      targetName: extName,\n      bundleIdentifier: shareExtensionIdentifier,\n    });\n    extConfigIndex = 0;\n  }\n\n  const extConfig = config.extra.eas.build.experimental.ios.appExtensions[extConfigIndex];\n  extConfig.entitlements = {\n    ...extConfig.entitlements,\n    ...getShareExtensionEntitlements(appIdentifier),\n  };\n\n  return config;\n};\n"]}