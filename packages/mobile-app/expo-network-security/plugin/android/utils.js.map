{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../src/android/utils.ts"],"names":[],"mappings":"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","sourcesContent":["\nfunction insertAfterText(contents: string, searchFor: string, insertAfter: string): string {\n  const indexFound = contents.indexOf(searchFor);\n  if ( indexFound === -1 ) {\n    throw new Error('Import not found');\n  }\n  const index = indexFound + searchFor.length;\n  contents = contents.substring(0, index) + insertAfter + contents.substring(index);\n  return contents;\n}\n\nfunction cursorBefore(contents: string, args: {searchFor: RegExp, cursor: number}): {pos: number, text: string} {\n  const {searchFor, cursor} = args;\n  if ( cursor > contents.length ) {\n    throw new Error('Invalid offset');\n  }\n\n  const tmp = contents.substring(cursor) ?? '';\n  const idx = tmp.search(searchFor);\n  const m = tmp.match(searchFor);\n\n  if ( !m || idx === -1 ) {\n    console.log(\"searching in text : \" + tmp);\n    throw new Error('Not found : ->' + searchFor + '<-');\n  }\n\n  const pos = cursor + idx;\n\n  return {\n    pos,\n    text: contents,\n  };\n}\n\nfunction cursorAfter(contents: string, args: {searchFor: RegExp, cursor: number}): {pos: number, text: string} {\n  const {searchFor, cursor} = args;\n  if ( cursor > contents.length ) {\n    throw new Error('Invalid offset');\n  }\n\n  const tmp = contents.substring(cursor) ?? '';\n  const idx = tmp.search(searchFor);\n  const m = tmp.match(searchFor);\n\n  if ( !m || idx === -1 ) {\n    throw new Error('Not found');\n  }\n\n  const pos = cursor + idx + m[0].length;\n\n  return {\n    pos,\n    text: contents,\n  };\n}\n\nfunction insertText(contents: string, args: {text: string, cursor: number}): {pos: number, text: string} {\n  const {text, cursor} = args;\n  if ( cursor > contents.length ) {\n    throw new Error('Invalid offset');\n  }\n\n  if ( !text ) {\n    return {\n      pos: cursor,\n      text,\n    };\n  }\n\n  return {\n    pos: cursor + text.length,\n    text: contents.substring(0, cursor) + text + contents.substring(cursor),\n  };\n}\n"]}