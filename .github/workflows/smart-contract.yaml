name: Fmt and Clippy

# This job runs rustfmt and clippy linting,

on:
  push:
    branches: main
    paths: [contract/**]

  pull_request:
    branches: main
    paths: [contract/**]

  workflow_dispatch: # allows manual trigger

env:
  RUST_FMT: nightly-2022-06-09-x86_64-unknown-linux-gnu
  RUST_CLIPPY: 1.67

jobs:
  "lint_fmt":
    name: lint:fmt
    # Don't run on draft pull requests
    if: ${{ !github.event.pull_request.draft }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.RUST_FMT }}
          override: true
          components: rustfmt
      - name: Format
        run: |
          cargo fmt --manifest-path contract/Cargo.toml -- --color=always --check

  "lint_clippy":
    name: lint:clippy
    needs: "lint_fmt"
    # Don't run on draft pull requests
    if: ${{ !github.event.pull_request.draft }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.RUST_CLIPPY }}
          override: true
          components: rustfmt, clippy
      - name: Clippy
        run: |
          git config --global url."https://github.com/".insteadOf "git@github.com:"
          cargo clippy --locked --manifest-path contract/Cargo.toml --color=always --tests --benches -- -Dclippy::all

  "test_contracts":
    name: test:contracts
    needs: "lint_clippy"
    # Don't run on draft pull requests
    if: ${{ !github.event.pull_request.draft }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.RUST_CLIPPY }}
          override: true
          components: rustfmt, clippy
      - name: Clippy
        run: |
          git config --global url."https://github.com/".insteadOf "git@github.com:"
          cargo test --manifest-path contract/Cargo.toml

  compile-no-std:
    name: compile:no-std
    runs-on: ubuntu-latest
    needs: "lint_clippy"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install nightly toolchain with check available
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          target: wasm32-unknown-unknown
          override: true

      - name: Run cargo check with no-std
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --manifest-path contract/Cargo.toml --target=wasm32-unknown-unknown --no-default-features --features wee_alloc

